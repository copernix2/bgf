{Application 'BASELINE_APPL' logic file generated by CSPro}
PROC GLOBAL


PROC LM1
preproc
	$=curocc();


PROC BASELINE_DICT_FF

PROC LTP_DICT_LEVEL
STATUT_LTP=1;
writecase(BGF_EXT_IND_DICS);
PROC ID_INDIVIDU_LTP
	if ! loadcase(BGF_EXT_IND_DICS, ID, ID_INDIVIDU_LTP) then 
		errmsg("Informations de l'individu introuvables.");
		exit;
	 endif;
//errmsg("%d %d",EXT_CF10,EXT_CF13);
PROC SECTIO_TA_FORM
preproc
	ask if EXT_CF10=1;
PROC CF12
preproc
	ask if highlighted(CF11) ;
PROC SECTIO_TA000
preproc
	ask if highlighted(CF11) ;
PROC TA1
preproc
	$=curocc();
PROC TA2
preproc
	$=curocc();

PROC TA3_A
preproc

	ask if TA3=5;
PROC TA4
if $<=0 then
	errmsg("La surface ne peut pas etre nulle ou negative");
	reenter;
endif;
PROC TA5_A
preproc

	ask if TA5=4;
PROC TA6
if $<0 then
	errmsg("Veuillez entrer un temps valide");
	reenter;
endif;

PROC TA7_A
preproc

	ask if TA7=9;
PROC TA8
preproc

	ask if TA7=5;
PROC TA8_A
preproc

	ask if TA8=4;
PROC BLOCK000_TA9
preproc

	ask if TA7=5;
PROC TA10
preproc

	ask if TA7=5;
PROC TA11
preproc

	ask if TA10=1;
Postproc

	if length(strip($))=0 then
		errmsg("Veuillez preciser le nom de la Cooperative");
		reenter;
	endif;
PROC TA12
preproc

	ask if TA10=1;
PROC TA19
preproc
	ask if TA7=3 or TA7=6 or TA7=7;
PROC TA20
preproc
	ask if TA7=4;
PROC TA21_A

preproc

	ask if TA21=99;
PROC TA21_B1
preproc
	ask if TA21=4 or TA21=5 or TA21=6 or TA21=99;
	
PROC TA21_B1A
preproc
	ask if TA21_B1=99;
PROC TA21_B2
preproc
	ask if TA21=1 or TA21=2 or TA21=3;
PROC TA22_A
preproc
	ask if pos("99",TA22);
PROC TA24
Postproc
	if length(strip($))>1 and ischecked("00",$)<>0  then
		errmsg("Modalités incompatibles");
	    reenter;
	endif;
PROC TA24_A
preproc
	ask if pos("99",TA24);
PROC TA26
if $<0 and $>100 then
	errmsg("Entrez une distance valide");
	reenter;
endif;
PROC TA27

if $<0 and $>1000 then
	errmsg("Entrez un temps valide");
	reenter;
endif;
PROC TA28_A
preproc

	ask if TA28H=1;
PROC TA28_B1
preproc
	ask if pos("1",TA22) or pos("2",TA22) or pos("3",TA22);
PROC TA28_B2
preproc
	ask if TA28_B1=1 or TA28_B1=2 or TA28_B1=3;
PROC TA31
preproc
	ask if TA29=4 or TA29=5 or TA30=4 or TA30=5;
PROC TA31_A
preproc
	ask if pos("99",TA31);
PROC SECTION_TH_FORM
preproc
	ask if EXT_CF13=1;
PROC CF15
preproc
	ask if highlighted(CF14) ;
PROC SECTION_TH000
preproc
	ask if highlighted(CF14) ;
	//ask if pos("13",TA31);
PROC TH2
preproc
	$=curocc();
PROC TH3
if $<0 then
	errmsg("Veuillez entrer une superficie valide");
	reenter;
endif;
PROC TH5_A
preproc
	ask if TH5=4;
PROC TH7_A
preproc

ask if TH7=9;
PROC TH8
preproc

ask if TH7=5;
PROC TH8_A
preproc
	ask if TH8=4;
PROC BLOCK000_TH9
preproc

ask if TH7=5;
PROC TH10
preproc

ask if TH7=5;

PROC TH11
preproc

ask if TH10=1;
PROC TH12
preproc
	ask if TH7=3 or TH7=7;
PROC TH13
preproc 
	ask if TH7=4;
PROC TH14_A
preproc
	ask if TH14=99;
PROC TH14_B1
preproc
	ask if TH14=4 or TH14=5 or TH14=6 or TH14=99;
PROC TH14_B1A
preproc
	ask if TH14_B1=99;
PROC TH14_B2
preproc
	ask if TH14=1 or TH14=2 or TH14=3;
PROC TH15_A
preproc
	ask if TH15=7;
PROC TH16
preproc
	ask if TH7=2;
PROC TH17
preproc
	ask if TH16=1;

postproc 
	if $<0 or $>100 then
	errmsg("Merci de vérifier le nombre de parcelle saisie");
	reenter;
	endif;
PROC TH18
preproc
	ask if TH16=1;

postproc 
	if $<0 or $>TH17 then
	errmsg("le nombre de parcelle héritée ne doit pas être supérieur au nombre de parcelle du lotissement");
	reenter;
	endif;
PROC TH19
preproc

ask if TH16=1;
PROC TH19_R
preproc

ask if TH19=3;
PROC TH19_A
preproc

ask if TH19=5;
PROC TH19_BIS
preproc

ask if TH16=1;
PROC TH20
preproc
	ask if TH16=1;
	
PROC TH20_A
preproc
	ask if TH20=6;
PROC TH21
preproc

ask if TH7=3;
PROC TH21_A
preproc

ask if TH21=5;
PROC TH22_A
preproc
 
	ask if TH22J=1;
PROC TH25
preproc
	ask if TH23=4 or TH23=5 or TH24=4 or TH24=5;
PROC TH25_A
preproc
	ask if pos("99",TH25);
PROC CF18
preproc
	ask if highlighted(CF17) ;
PROC SECTION_LM000
preproc
	ask if highlighted(CF17) ;
PROC LM2
preproc
	$=curocc();

PROC LM4
preproc

	ask if LM3=1;
PROC LM5
preproc

	ask if LM3=1;
PROC LM6
if $<=0 then
	errmsg("La superficie doit etre non nulle et positive");
	reenter;
endif;
PROC LM7_A
preproc
	ask if LM7=99;
PROC LM8_A
preproc
	ask if LM8=99;
PROC LM9
preproc

	ask if !(LM8 in 1:3);
PROC LM9_A
preproc
	ask if LM9=8;
PROC LM10
preproc

	ask if LM9 in 3:7; 
PROC LM10_A
preproc

	ask if LM10=3;
PROC LM11
preproc

	ask if LM9 in 3:7;
PROC BLOCK000_LM12
preproc

	ask if LM8 in 1:3;
PROC LM13
preproc
	ask if LM8 in 1:3;
PROC LM13_A
preproc

	ask if LM13=12;
PROC LM14
preproc
	ask if LM8 in 1:3;
PROC LM14_A
preproc

	ask if LM14=9;
PROC LM15
preproc

	ask if LM14=5;
PROC LM15_A
preproc

	ask if LM15=4; 
PROC LM16
preproc

	ask if LM14=5;
PROC LM17
preproc

	ask if LM14=5;
PROC LM18
preproc

	ask if LM17=1;
PROC LM19
preproc
	ask if LM14=3 or LM14=7;
PROC LM20
preproc
	ask if LM9 in 1:6;
PROC LM21
preproc
	ask if LM9 in 1:6;
PROC LM22
preproc
	ask if LM8 in 1:3;
PROC LM22_A
preproc
	ask if LM22=99;
PROC LM22_B1
preproc
	ask if LM22=4 or LM22=5 or LM22=6 or LM22=99;
PROC LM22_B1A
preproc
	ask if LM22_B1=99;
PROC LM23
preproc
	ask if LM14=2;
PROC LM24
preproc
	ask if LM23=1;

postproc 
	if $<0 or $>100 then
	errmsg("Merci de vérifier le nombre de parcelle saisie");
	reenter;
	endif;
PROC LM25
preproc
	ask if LM23=1;

postproc 
	if $<0 or $>LM24 then
	errmsg("le nombre de parcelle héritée ne doit pas être supérieur au nombre de parcelle du lotissement");
	reenter;
	endif;
PROC LM26
preproc
	ask if LM23=1;
PROC LM26_B
preproc
	ask if LM26=3;
PROC LM26_A
preproc
	ask if LM26=99;
PROC LM26_BIS
preproc
	ask if LM23=1;
PROC LM27
preproc
	ask if LM14=3 or LM14=6 or LM14=7;
PROC LM27_A
preproc
	ask if LM27=6;
PROC LM28
preproc
	ask if LM14=3;

PROC LM28_A
preproc
	ask if LM28=5;
PROC LM29_A
preproc

	ask if LM29J=1;
PROC LM32
preproc
	ask if LM30=4 or LM30=5 or LM31=4 or LM31=5;
PROC LM32_A
preproc
	ask if pos("99",LM32);
PROC GROUP000
preproc 
	ask if IS_REP_2=1 or EXT_CF5=1;
PROC CA02_A
preproc 
	ask if CA02=96;
PROC CA03
Postproc
	if length(strip($))>1 and ischecked("98",$)<>0  then
		errmsg("Modalités incompatibles");
	    reenter;
	endif;
PROC CA03_A
preproc
	ask if pos("99",CA03);
PROC CA04
onfocus
	valueset string secondaire_vs=CA03_VS1;
	numeric i=1;
	numeric num_mod;
	while i<=9 do
		num_mod=i;
		if i=9 then 
			num_mod=99;
		endif;
		if ! ischecked(maketext("%02d", num_mod),CA03) then 
			secondaire_vs.remove(maketext("%02d", num_mod));
		endif;
		inc(i);
	enddo;
	
	setvalueset($, secondaire_vs);
PROC CA04_A
preproc
	ask if pos("99",CA04);

PROC CA06
onfocus
	valueset string secondaire_vs=CA05_VS1;
	numeric i=1;
	numeric num_mod;
	while i<=9 do
		num_mod=i;
		if i=9 then 
			num_mod=99;
		endif;
		if ! ischecked(maketext("%02d", num_mod),CA05) then 
			secondaire_vs.remove(maketext("%02d", num_mod));
		endif;
		inc(i);
	enddo;
	
	setvalueset($, secondaire_vs);
PROC CA08
onfocus
	valueset string secondaire_vs=CA07_VS1;
	numeric i=1;
	numeric num_mod;
	while i<=9 do
		num_mod=i;
		if i=9 then 
			num_mod=99;
		endif;
		if ! ischecked(maketext("%02d", num_mod),CA07) then 
			secondaire_vs.remove(maketext("%02d", num_mod));
		endif;
		inc(i);
	enddo;
	
	setvalueset($, secondaire_vs);
PROC GROUP001
preproc 
	ask if IS_REP_2=1 or EXT_CF5=1;
PROC CL_AUTRE
preproc
	ask if CL1(12)=1;
PROC GROUP002
preproc 
	ask if IS_REP_2=1 or EXT_CF5=1;
PROC CL2
preproc
	if CL1(curocc())=2 then 
		skip to next;
	endif;
PROC CL3
preproc
	ask if CL2=1;
PROC CL4
preproc
	ask if CL2=1;
PROC CL5
preproc
	ask if CL4=1;
PROC CL6
preproc
	ask if CL2=1;
PROC CL7
preproc
	ask if CL2=1;
PROC CL8
preproc
	ask if CL2=1;
PROC CL9
preproc
	ask if CL8=1;
PROC CL10
preproc
	ask if CL8=1;
PROC CL10_A
preproc
	ask if pos("5",CL10);
PROC CL11
preproc
	ask if CL8=1;
PROC CL12
preproc
	ask if CL8=1;
PROC CL13_A
preproc
 ask if CL1(3)=1 or CL1(4)=1 or CL1(5)=1 or CL1(6)=1 or CL1(7)=1; 
PROC CL13_B
preproc
 ask if CL1(3)=1 or CL1(4)=1 or CL1(5)=1 or CL1(6)=1 or CL1(7)=1; 
PROC CL14
preproc
	ask if CL2=1;
PROC CL15
preproc
	ask if CL2=2;
PROC CL16
preproc
	ask if CL2=2;
PROC LOG_AGENT
preproc
	$=tonumber(getoperatorid());
PROC DATE_DEBUT
preproc
	if special(visualvalue($)) then 
		$=timestamp();
	endif;
PROC DATE_FIN
preproc
	if special(visualvalue($)) then 
		$=timestamp();
	endif;
