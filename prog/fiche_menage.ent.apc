{Application 'FICHE_MENAGE' logic file generated by CSPro}
PROC GLOBAL
string PathProg, PathInput, PathTemp, PathTpk, Pathlogs, Pathdata, resources, PathParam, PathComp;
file fileParam;
numeric login_agent;

function  open_composition(string idmen)
	 pff hh_pff;
	 hh_pff.setproperty("operatorid", getoperatorid());
	 hh_pff.setproperty("StartMode", "ADD");
	 hh_pff.setproperty("key", idmen);
	 hh_pff.setproperty("Application", PathProg + 'composition_menage.pen');
	 hh_pff.setproperty("InputData", PathData + maketext('composition_%02d.csdb',LOGIN_AGENT));
	 hh_pff.setproperty("Description", "Composition ménage");
	 hh_pff.setproperty("Paradata", PathLogs + "ParaMenu_" + getoperatorid() + ".cslog");
	 hh_pff.setproperty("ExternalFiles.EXT_LOGIN_DICT", resources + 'login_expert.csdb');
	 hh_pff.setproperty("ExternalFiles.EXT_IND_DICS", PathData + maketext('ext_ind_%02d.csdb',LOGIN_AGENT));
	 hh_pff.setproperty("ExternalFiles.MENAGE_DICT", PathData + maketext('menage_%02d.csdb',LOGIN_AGENT));
	 hh_pff.setproperty("OnExit", pathname(temp) + "menu.pff");
	 hh_pff.exec();
end; 

{function open_individu(numeric id)
	EXT_ID_IND=id;
	if ! loadcase(EXT_IND_DICS, ID_MEN_FICHE, EXT_ID_IND) then 
		errmsg("Informations de l'individus introuvable");
		exit;
	 endif;
	 pff compostion_pff;
	 compostion_pff.setproperty("operatorid", getoperatorid());
	 compostion_pff.setproperty("StartMode", "ADD");
	 compostion_pff.setproperty("key", key(EXT_IND_DICS));
	 compostion_pff.setproperty("Application", PathProg + 'baseline_individu.pen');
	 compostion_pff.setproperty("InputData", PathData + maketext('individu_%02d.csdb',LOGIN_AGENT));
	 compostion_pff.setproperty("Description", strip(EXT_CF2));
	 compostion_pff.setproperty("ExternalFiles.EXT_IND_DICS", PathData + maketext('ext_ind_%02d.csdb',LOGIN_AGENT));
	 compostion_pff.setproperty("ExternalFiles.MENAGE_DICT", PathData + maketext('menage_%02d.csdb',LOGIN_AGENT));
	 //compostion_pff.setproperty("OnExit", pathname(temp) + "fiche_menage.pff");
	 compostion_pff.setproperty("OnExit", pathname(temp) + "fiche_menage.pff");
	 compostion_pff.exec();
end;}
function Open_ltp(numeric id)
	EXT_ID_IND=id;
	if ! loadcase(EXT_IND_DICS, ID_MEN_FICHE, EXT_ID_IND) then 
		errmsg("Informations de l'individus introuvable");
		exit;
	 endif;
	 pff compostion_pff;
	 compostion_pff.setproperty("operatorid", getoperatorid());
	 compostion_pff.setproperty("StartMode", "ADD");
	 compostion_pff.setproperty("key", key(EXT_IND_DICS));
	 compostion_pff.setproperty("Application", PathProg + 'ltp.pen');
	 compostion_pff.setproperty("InputData", PathData + maketext('lpt_%02d.csdb',LOGIN_AGENT));
	 compostion_pff.setproperty("Description", strip(EXT_CF2) );
	 compostion_pff.setproperty("Paradata", PathLogs + "ParaComposition_" + getoperatorid() + ".cslog");
	 compostion_pff.setproperty("ExternalFiles.EXT_IND_DICS", PathData + maketext('ext_ind_%02d.csdb',LOGIN_AGENT));
	 compostion_pff.setproperty("ExternalFiles.MENAGE_DICT", PathData + maketext('menage_%02d.csdb',LOGIN_AGENT));
	 compostion_pff.setproperty("OnExit", pathname(temp) + "fiche_menage.pff");
	 compostion_pff.exec();
end;


function onstop()
	setfile(fileParam, PathParam + "list_menage.txt", create);
	filewrite(fileParam, "Juste pour retourner sur le Map à la sortie");
	close(fileParam);
end;
PROC FICHE_MENAGE_FF

PROC FICHE_MENAGE_LEVEL
Preproc
    PathProg = pathname(application);
	PathInput = PathProg + "../input/";
	PathTemp = PathTemp + "../temp/";
	PathTpk = PathTemp + "../tpk/";
 	Pathlogs=PathProg + "../logs/";
	Pathdata= PathProg + "../data/";
	resources= PathProg + "../resources/";
	PathComp=PathProg + "../comp/";
	PathParam= pathname(application) + "../param/";
	login_agent=tonumber(getoperatorid());
postproc

PROC ID_MEN_FICHE
postproc
if !loadcase(MENAGE_DICT, $) then 
	errmsg("Information  du ménage introuvables");
	//stop(1);
endif;

numeric uncompleted=0;
forcase EXT_IND_DICS where EXT_ID=ID_MEN_FICHE do 
	if STATUT_LTP=0 or  ((IS_REP_2 =1 or EXT_CF5=1) and STATUT_HF=0) then 
		inc(uncompleted);
	endif;
endfor;
if uncompleted=0 then 
	MEN_STATUT=3;
	writecase(MENAGE_DICT);
endif;
PROC MENU_FICHE


if fileexist(pathname(application) + "return_fiche.txt") then 
	filedelete(pathname(application) + "return_fiche.txt");
	HH_PROFIL.view();
endif;
if $=1 then 
	HH_PROFIL.view();
	reenter;
endif;

if $=2 then 
	open_composition(ID_MEN_FICHE);
endif;

if $=9 then 
	setfile(fileParam, pathname(application) + "list_menage.txt", create);
	filewrite(fileParam, "Juste pour retourner sur le Map à la sortie");
	close(fileParam);
	stop(1);
endif;

