{Application 'FICHE_MENAGE' logic file generated by CSPro}
PROC GLOBAL
string PathProg, PathInput, PathTemp, PathTpk, Pathlogs, Pathdata, resources, PathParam, PathComp;
file fileParam;

function  open_composition()
	 pff hh_pff;
	 hh_pff.setproperty("operatorid", getoperatorid());
	 hh_pff.setproperty("StartMode", "ADD");
	 hh_pff.setproperty("key", ID_MEN_FICHE);
	 hh_pff.setproperty("Application", PathProg + 'composition_mem.pen');
	 hh_pff.setproperty("InputData", PathData + 'composition.csdb');
	 hh_pff.setproperty("Description", "Composition ménage");
	 hh_pff.setproperty("Paradata", PathLogs + "ParaMenu_" + getoperatorid() + ".cslog");
	 hh_pff.setproperty("ExternalFiles.EXT_LOGIN_DICT", resources + 'login_expert.csdb');
	 hh_pff.setproperty("ExternalFiles.EXT_IND_DICS", PathData + 'ext_ind.csdb');
	  hh_pff.setproperty("ExternalFiles.MENAGE_DICT", PathData + 'menage.csdb');
	 hh_pff.setproperty("OnExit", pathname(temp) + "menu.pff");
	 hh_pff.exec();
end;

function open_individu()
	 pff compostion_pff;
	 compostion_pff.setproperty("operatorid", getoperatorid());
	 compostion_pff.setproperty("StartMode", "ADD");
	 compostion_pff.setproperty("key", key(EXT_IND_DICS));
	 compostion_pff.setproperty("Application", PathProg + 'culture.pen');
	 compostion_pff.setproperty("InputData", PathData + 'culture.csdb');
	 compostion_pff.setproperty("Description", strip(EXT_CF2));
	 compostion_pff.setproperty("ExternalFiles.MENAGE_DICT", PathData+'menage.csdb');
	 compostion_pff.setproperty("ExternalFiles.EXT_IND_DICS", PathData+'ext_ind.csdb');
	  compostion_pff.setproperty("ExternalFiles.EXT_LOGIN_DICT", resources + 'expert_login.csdb');
	 compostion_pff.setproperty("ExternalFiles.SUIVI_PARCELLE_DICT", PathInput + 'suivi_parcelle_' + ID_MEN_FICHE+ '.csdb');
	 //compostion_pff.setproperty("OnExit", pathname(temp) + "fiche_menage.pff");
	 compostion_pff.save(pathname(temp)+"gestion.pff");
	 compostion_pff.exec();
end;
function Open_ltp(numeric id)
	EXT_ID_IND=id;
	if ! loadcase(EXT_IND_DICS, ID_MEN_FICHE, EXT_ID_IND) then 
		errmsg("Informations de l'individus introuvable");
		exit;
	 endif;
	 pff compostion_pff;
	 compostion_pff.setproperty("operatorid", getoperatorid());
	 compostion_pff.setproperty("StartMode", "ADD");
	 compostion_pff.setproperty("key", key(EXT_IND_DICS));
	 compostion_pff.setproperty("Application", PathProg + 'WEAI_APPLICATION.pen');
	 compostion_pff.setproperty("InputData", PathData + 'Individus_weai.csdb');
	 compostion_pff.setproperty("Description", strip(EXT_CF2) );
	 compostion_pff.setproperty("Paradata", PathLogs + "ParaComposition_" + getoperatorid() + ".cslog");
	 compostion_pff.setproperty("ExternalFiles.MENAGE_DICT", PathData+'menage.csdb');
	 compostion_pff.setproperty("ExternalFiles.EXT_IND_DICS", PathData+'ext_ind.csdb');
	 compostion_pff.setproperty("ExternalFiles.EXT_LOGIN_DICT", resources + 'expert_login.csdb');
	 compostion_pff.setproperty("OnExit", pathname(temp) + "fiche_menage.pff");
	 compostion_pff.exec();
end;


function onstop()
	setfile(fileParam, PathParam + "list_menage.txt", create);
	filewrite(fileParam, "Juste pour retourner sur le Map à la sortie");
	close(fileParam);
end;
PROC FICHE_MENAGE_FF

PROC FICHE_MENAGE_LEVEL
Preproc
    PathProg = pathname(application);
	PathInput = PathProg + "../input/";
	PathTemp = PathTemp + "../temp/";
	PathTpk = PathTemp + "../tpk/";
 	Pathlogs=PathProg + "../logs/";
	Pathdata= PathProg + "../data/";
	resources= PathProg + "../resources/";
	PathComp=PathProg + "../comp/";
	PathParam= pathname(application) + "../param/";
	
postproc

PROC ID_MEN_FICHE
postproc
if !loadcase(MENAGE_DICT, $) then 
	errmsg("Information  du ménage introuvables");
	//stop(1);
endif;

PROC MENU_FICHE


if fileexist(pathname(application) + "return_fiche.txt") then 
	filedelete(pathname(application) + "return_fiche.txt");
	HH_PROFIL.view();
endif;
if $=1 then 
	HH_PROFIL.view();
	reenter;
endif;

if $=2 then 
	open_composition()
endif;

if $=9 then 
	setfile(fileParam, pathname(application) + "list_menage.txt", create);
	filewrite(fileParam, "Juste pour retourner sur le Map à la sortie");
	close(fileParam);
	stop(1);
endif;

