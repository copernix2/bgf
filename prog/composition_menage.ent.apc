{Application 'COMPOSITION_MENAGE' logic file generated by CSPro}
PROC GLOBAL






PROC COMPOSITION_MENAGE_FF

PROC COMPOSITION_MENAGE_LEVEL
//for numeric i in SECTION_CF000 where CF10=1 or CF13=1 or CF16=1  or REP2=CF1 do 
for numeric i in SECTION_CF000  do 

	EXT_ID=COMPOSITION_MENAGE_ID;
	EXT_ID_IND=CF1;
	EXT_CF2=CF2;
	EXT_CF3=CF3;
	EXT_CF4=CF4;
	EXT_CF5=CF5;
	EXT_CF6=CF6;
	EXT_CF7=CF7;
	EXT_CF7B=CF7B;
	EXT_CF8=CF8;
	EXT_CF9=CF9;
	EXT_CF10=CF10;
	EXT_CF13=CF13;
	EXT_CF16=CF16;
	STATUT_LTP=0;
	STATUT_HF=0;
	EXT_IND_DICS.LOGIN_ENQUETEUR=tonumber(getoperatorid());
	if REP2 = CF1 then 
		IS_REP_2=1;
	else
		IS_REP_2=notappl;
	endif;
	writecase(EXT_IND_DICS);
enddo;


MEN_STATUT=2;
MEN_CM=CF2(1);
writecase(MENAGE_DICT);

PROC COMPOSITION_MENAGE_ID
if ! loadcase(MENAGE_DICT,$) then 
	errmsg("Informations sur le ménage introuvables");
	stop(1);
endif;
PROC LOG_AGENT
PReproc
	$=tonumber(getoperatorid());
PROC DATE_DEBUT
preproc
	if special(visualvalue($)) then 
		$=timestamp();
	endif;
PROC ID02
preproc
	$=MEN_CODE_COM;
PROC ID03
preproc
	$=MEN_CODE_VIL;
PROC ID05
preproc
	$=MEN_CM;
PROC RC08

if ! regexmatch(maketext("%d",$), "^(77|76|75|78|70|33|30)[0-9]{7}$") then
		// 
		errmsg("Veuillez entrer un numero de telephone correct");
		reenter;
	endif;
PROC RC10_A

preproc

	ask if RC10=96;
PROC RC11_A

preproc

	ask if RC11=96;
PROC PM01_A
preproc

	ask if PM01=2;


postproc
	if $>100 then
	errmsg("Merci de vérifier le nombre d'années saisie");
	reenter;
	endif;
PROC PM02
preproc

	ask if PM01=2;
PROC PM02_A

preproc

	ask if PM02=2;
PROC PM02_B
preproc

	ask if PM02=3;
PROC PM03
preproc

	ask if PM01=2;
PROC PM03_A
preproc

	ask if PM03=96;
PROC PM05
if $<0 then
		
		errmsg("Veuillez entrer un nombre valide");
		reenter;
	endif;
PROC PM06
if $<0 then
		
		errmsg("Veuillez entrer un nombre valide");
		reenter;
	endif;
PROC PM04
preproc
	$=PM05+PM06

PROC PM07
{if $=1 and tonumber(maketext("%d",LOG_AGENT)[1:1])>1 then
	
	endlevel;
endif;


if $=1 and tonumber(maketext("%d",LOG_AGENT)[1:1])=1 then
	
	endlevel;
endif;}
PROC RM1_A

preproc

	ask if RM1=96;
PROC RM2
if $<=0 or $>10000000 then
	errmsg("Merci de vérifier le montant de la principale source de revenu du ménage");
	reenter;
endif;
PROC RM2_P

preproc
	ask if 1=2;
	
{if $<=0 or $>10 then
	errmsg("La part de la source principale doit etre entre 1 et 10");
	reenter;
endif;}


PROC RM3

{preproc
if curocc()=RM1 then
		$=RM2_P;
	endif;}
postproc
if $<0 or $>10 then
	errmsg("La part doit etre entre 0 et 10");
	reenter;
endif;

if RM3(1) + RM3(2) + RM3(3) + RM3(4) + RM3(5) + RM3(6) + RM3(7) + RM3(8) + RM3(9) + RM3(10) >10 then
	errmsg("La somme ne doit être égal à 10");
	reenter;
endif;
PROC PR02
preproc
	ask if PR01=2;
PROC PR03
preproc
	ask if PR01=1;
	
postproc
if $<=0 or $>10 then
	errmsg("Merci de vérifier le nombre de projet bénéficié par le ménage");
	reenter;
endif;
PROC SOUS_SEC_PR000
preproc
	ask if PR03>0;
PROC PR04
preproc
	$=curocc();
PROC PR05
preproc
	ask if 1=2;
PROC PR05_A
preproc
	ask if 1=2;
{preproc
	ask if pos("9",PR05);}
PROC PR06_A
preproc
	ask if pos("99",PR06);
PROC PR07
onfocus
	valueset string secondaire_vs=PR06_VS1;
	numeric i=1;
	numeric num_mod;
	while i<=16 do
		num_mod=i;
		if i=16 then 
			num_mod=99;
		endif;
		if ! ischecked(maketext("%02d", num_mod),PR06) then 
			secondaire_vs.remove(maketext("%02d", num_mod));
		endif;
		inc(i);
	enddo;
	
	setvalueset($, secondaire_vs);
PROC PR07_A
preproc
	ask if pos("99",PR07);
PROC PR08S
preproc
	ask if pos("1",PR08);
PROC PR08_ONG
preproc
	ask if pos("3",PR08);
PROC PR08_A
preproc
	ask if pos("96",PR08);
PROC PR09_A
preproc
	ask if pos("9",PR09);
PROC PR10_A
preproc
	ask if pos("9",PR10);
PROC SECTION_CF000

PROC CF1
preproc
	$=curocc();
PROC CF4

if $<18 or $>100 then

	errmsg("Veuillez entre un age au moins supérieur à 18 ans.");
	reenter;
endif;
PROC CF5
if curocc()=1 and $<>1 then 
	errmsg("La première ligne doit être occupée par le CM");
	reenter;
endif;

if curocc()>1 and $ =1 then 
	errmsg("Il faut un seul CM dans le ménage");
	reenter;
endif;
PROC CF5_A
preproc

	ask if CF5=13;
PROC CF7_A
preproc

	ask if CF7=14;
PROC CF8
preproc
	ask if CF7<>0;
Postproc
	if length(strip($))>1 and ischecked("16",$)<>0  then
		errmsg("Modalités incompatibles");
	    reenter;
	endif;

PROC CF8_A
preproc
	ask if pos("14",CF8);
	
PROC CF7B
if CF5=2 and ($=7 or $=8 or $=9) then
errmsg("L'époux/épouse ne peut qu'être marié(e)");
reenter;
endif; 
PROC CH7B_A
preproc
	ask if CF7B=10;
PROC CF16
preproc
	ask if 1=2;
PROC AJOUTER_UN_AUTRE_INDIVIDU
if $=2 then
	if PM07=1 and  count(SECTION_CF000 where CF10=1)=0 then 
		errmsg("Il doit exister au moins un membre du ménage ayant, louant ou empruntant des terres pour l'agriculture.");
		reenter;
	endif;
	if PM07=0 and  count(SECTION_CF000 where CF10=1)>0 then 
		errmsg("Il ne doit pas exister au moins un membre du ménage ayant, louant ou empruntant des terres pour l'agriculture.");
		reenter;
	endif;
	endgroup;
endif;
PROC REP2
preproc
valueset preneur_decision_vs;
for numeric i in SECTION_CF000 where CF3 <> CF3(1)  do 
	preneur_decision_vs.add(strip(CF2),CF1); 
enddo;

setvalueset($, preneur_decision_vs);

if preneur_decision_vs.length()=0 then
	IF CF3(1)=1 then 
		errmsg("Il doit avoir au moins une femme dans le ménage pour le ménage soit éligible.");
	else
		errmsg("Il doit avoir au moins un homme dans le ménage pour le ménage soit éligible.");
	endif;
	reenter AJOUTER_UN_AUTRE_INDIVIDU(totocc(SECTION_CF000));
endif;
PROC DATE_FIN
preproc
	$=timestamp();
