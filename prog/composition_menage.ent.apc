{Application 'COMPOSITION_MENAGE' logic file generated by CSPro}
PROC GLOBAL






PROC COMPOSITION_MENAGE_FF

PROC COMPOSITION_MENAGE_LEVEL
//for numeric i in SECTION_CF000 where CF10=1 or CF13=1 or CF16=1  or REP2=CF1 do 
for numeric i in SECTION_CF000  do 

	EXT_ID=COMPOSITION_MENAGE_ID;
	EXT_ID_IND=CF1;
	EXT_CF2=CF2;
	EXT_CF3=CF3;
	EXT_CF4=CF4;
	EXT_CF5=CF5;
	EXT_CF6=CF6;
	EXT_CF7=CF7;
	EXT_CF7B=CF7B;
	EXT_CF8=CF8;
	EXT_CF9=CF9;
	EXT_CF10=CF10;
	EXT_CF13=CF13;
	EXT_CF16=CF16;
	STATUT_LTP=0;
	STATUT_HF=0;
	if REP2 = CF1 then 
		IS_REP_2=1;
	else
		IS_REP_2=notappl;
	endif;
	writecase(EXT_IND_DICS);
enddo;

PROC RC08

if ! regexmatch(maketext("%d",$), "^(77|76|75|78|70|33|30)[0-9]{7}$") then
		// 
		errmsg("Veuillez entrer un numero de telephone correct");
		reenter;
	endif;
PROC RC10_A

preproc

	ask if RC10=96;
PROC RC11_A

preproc

	ask if RC11=96;
PROC PM01_A
preproc
	ask if PM01=2;
postproc
	if $>100 then
	errmsg("Merci de vérifier le nombre d'années saisie");
	reenter;
	endif;
PROC PM02
preproc

	ask if PM01=2;
PROC PM02_A

preproc

	ask if PM02=2;
PROC PM03
preproc

	ask if PM01=2;
PROC PM03_A
preproc

	ask if PM03=96;
PROC PM05
if $<0 then
		
		errmsg("Veuillez entrer un nombre valide");
		reenter;
	endif;
PROC PM06
if $<0 then
		
		errmsg("Veuillez entrer un nombre valide");
		reenter;
	endif;
PROC PM04

if $<=0 then
		
		errmsg("Veuillez entrer une taille valide");
		reenter;
	endif;
PROC PM07

if $=2 then

	endlevel;
endif;
PROC RM1_A

preproc

	ask if RM1=96;
PROC RM2
if $<=0 or $>10000000 then
	errmsg("Merci de vérifier le montant de la principale source de revenu du ménage");
	reenter;
endif;
PROC RM2_P

if $<=0 or $>10 then
	errmsg("La part de la source principale doit etre entre 1 et 10");
	reenter;
endif;

PROC RM3

preproc
if curocc()=RM1 then
		$=RM2_P;
	endif;
postproc
if $<0 or $>10 then
	errmsg("La part doit etre entre 0 et 10");
	reenter;
endif;
PROC PR02
preproc
	ask if PR01=2;
PROC PR03
preproc
	ask if PR01=1;
	
postproc
if $<=0 or $>10 then
	errmsg("Merci de vérifier le nombre de projet bénéficié par le ménage");
	reenter;
endif;
PROC SOUS_SEC_PR000
preproc
	ask if PR03>0;
PROC PR04
preproc
	$=curocc();
PROC PR05_A
preproc
	ask if pos("99",PR05);
PROC PR06_A
preproc
	ask if pos("99",PR06);
PROC PR07_A
preproc
	ask if pos("99",PR07);
PROC PR08_ONG
preproc
	ask if pos("3",PR08);
PROC PR08_A
preproc
	ask if pos("99",PR08);
PROC PR09_A
preproc
	ask if pos("99",PR09);
PROC PR10_A
preproc
	ask if pos("99",PR10);
PROC CF1
preproc
	$= curocc();
PROC CF4
if $<18 then

	errmsg("l'individu doit avoir minimum 18 ans");
	reenter;
endif;
PROC CF7_A
preproc

	ask if CF7=12;
PROC CH7B_A
preproc
	ask if CF7B=10;
PROC CF8
Postproc
	if length(strip($))>1 and (ischecked("1",$)<>0 or ischecked("15",$)<>0) then
		errmsg("Modalités incompatibles");
	    reenter;
	endif;
PROC CF8_A
preproc
	ask if pos("15",CF8);
	
PROC CF16
preproc
	ask if 1=2;
PROC REP2
preproc
valueset preneur_decision_vs;
for numeric i in SECTION_CF000 where CF3 <> CF3(1)  do 
	preneur_decision_vs.add(strip(CF2),CF1); 
enddo;

setvalueset($, preneur_decision_vs);
