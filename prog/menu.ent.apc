{Application 'MENU' logic file generated by CSPro}
PROC GLOBAL
string PathProg, PathInput, PathTemp, PathTpk, Pathlogs, Pathdata, resources, PathParam, PathComp, mode_collecte;
function onstop()
	stop(1);
end;
list string list_MenId;
numeric i;
function Open_hh_function(numeric id_num_men)
	string idmen = list_MenId(id_num_men);
	pff compostion_pff;
	compostion_pff.setproperty("operatorid", getoperatorid());
	compostion_pff.setproperty("StartMode", "ADD");
	compostion_pff.setproperty("key",idmen);
	compostion_pff.setproperty("Application", PathProg + 'fiche_menage.pen');
	compostion_pff.setproperty("InputData", pathname(temp) + 'astou.csdb');
	compostion_pff.setproperty("Description", "Fiche ménage " );
	compostion_pff.setproperty("ExternalFiles.MENAGE_DICT", PathData+'menage.csdb');
	 compostion_pff.setproperty("ExternalFiles.EXT_IND_DICS", PathData+'ext_ind.csdb');
	compostion_pff.setproperty("OnExit", pathname(temp) + "menu.pff");
	compostion_pff.save(pathname(temp)+"fiche_menage.pff");
	compostion_pff.exec();
end;
function open_village()
	pff compostion_pff;
	compostion_pff.setproperty("operatorid", getoperatorid());
	compostion_pff.setproperty("StartMode", "ADD");
	compostion_pff.setproperty("Application", PathProg + 'village.pen');
	compostion_pff.setproperty("InputData", PathData+"village.csdb");
	compostion_pff.setproperty("Description", "Fiche Vilage " );
	compostion_pff.setproperty("OnExit", pathname(temp) + "menu.pff");
	compostion_pff.exec();
end;
function New_hh_function()
	// ouverture de la fiche de concrétisation 
	 pff hh_pff;
	 hh_pff.setproperty("operatorid", getoperatorid());
	 hh_pff.setproperty("StartMode", "ADD");
	 hh_pff.setproperty("key", uuid());
	 hh_pff.setproperty("Application", PathProg + 'menage.pen');
	 hh_pff.setproperty("InputData", PathData + 'menage.csdb');
	 hh_pff.setproperty("Description", "Ajouter un nouveau ménage");
	 hh_pff.setproperty("Paradata", PathLogs + "ParaMenu_" + getoperatorid() + ".cslog");
	 hh_pff.setproperty("OnExit", pathname(temp) + "menu.pff");
	 hh_pff.exec();
end;
function  open_composition(string idmen)
	 pff hh_pff;
	 hh_pff.setproperty("operatorid", getoperatorid());
	 hh_pff.setproperty("StartMode", "ADD");
	 hh_pff.setproperty("key", idmen);
	 hh_pff.setproperty("Application", PathProg + 'composition_mem.pen');
	 hh_pff.setproperty("InputData", PathData + 'composition.csdb');
	 hh_pff.setproperty("Description", "Composition ménage");
	 hh_pff.setproperty("Paradata", PathLogs + "ParaMenu_" + getoperatorid() + ".cslog");
	 hh_pff.setproperty("ExternalFiles.EXT_LOGIN_DICT", resources + 'login_expert.csdb');
	 hh_pff.setproperty("ExternalFiles.EXT_IND_DICS", PathData + 'ext_ind.csdb');
	  hh_pff.setproperty("ExternalFiles.MENAGE_DICT", PathData + 'menage.csdb');
	 hh_pff.setproperty("OnExit", pathname(temp) + "menu.pff");
	 hh_pff.exec();
end; 
function composition_function(numeric id_num_men)
	string idmen = list_MenId(id_num_men);
	open_composition(idmen);
end;
function delete_hh_function(numeric id_num_men) 
	string idmen = list_MenId(id_num_men);
	errmsg("La suppression du ménage va entrainer la suppression de l'ensemble des informations rattachées. Voulez-vous continuer?")
	select("Oui", continue, "Non", Menu) default(2);
	if delcase(MENAGE_DICT, idmen) then 
		errmsg("Supression réussie");
		reenter;
	else
		errmsg("Une erreur inattendue a été rencontrée lors de la suppression");
		exit;
	endif;
end;
PROC MENU_FF

PROC MENU_LEVEL
preproc
	PathProg = pathname(application);
	PathInput = PathProg + "../input/";
	PathTemp = PathProg + "../temp/";
	PathTpk = PathProg + "../tpk/";
 	Pathlogs=PathProg + "../logs/";
	Pathdata= PathProg + "../data/";
	resources= PathProg + "../resources/";
	PathComp=PathProg + "../comp/";
	PathParam=PathProg + "../param/";
PROC LOGIN_AGENT
	
preproc
		$=tonumber(getoperatorid());

	
postproc
		{if loadcase(EXT_LOGIN_DICT, $) then 
			LOGIN_AGENT = login_agent;
			NOM_AGENT = USER_FIRSTNAME;
			SEXE_AGENT = USER_SEXE;
			LOGIN_BINOME2 = LOGIN_BINOME;
		else
			errmsg("Informations de l'agent introuvables");
			stop(1);
		endif;}
string commune_parm=getoperatorid()[1:1];
savesetting("commune",commune_parm );
PROC NOM_AGENT
$=getlabel(LOGIN_AGENT, LOGIN_AGENT);
PROC MENU
preproc
	{if USER_PROFIL=1 then
		setvalueset($,MENU_VS2);
	else
		setvalueset($,MENU_VS1);
	endif;}
postproc

if $=1 then 
	LISTE_MENAGE.view();
	reenter;
endif;
{if $=2 then 
	if SEXE_AGENT=1 then //envoi 
		if ! syncconnect(bluetooth, "tab_"+ LOGIN_BINOME2) then
			errmsg("La connexion a échouée");
			reenter;
		endif;
		if ! syncdata(BOTH, MENAGE_DICT) then 
			errmsg("Erreur de transmission de la base ménage.");
			reenter;
		endif;
		if ! syncdata(BOTH, EXT_IND_DICS) then 
			errmsg("Erreur de transmission de la base individu.");
			reenter;
		endif;
		syncdisconnect();
		errmsg("La synchronsation à réussie");
	else //serveur
		
		if syncserver(bluetooth) then 
			errmsg("La synchronsation à réussie");
		endif;
	endif;
	reenter;
endif;}

if $=3 then 
	{if ! connection() then 
			errmsg("La connexion internet n'est pas disponible");
			reenter;
		endif;
		if ! syncconnect(csweb, "http://174.138.32.222/recettes/api", "superadmin", "passer@1") then
			errmsg("La connexion au serveur a échouée");
			reenter;
		endif;
		if ! syncdata(PUT, VILLAGE_DICT) then 
			errmsg("Erreur de transmission de la base village.");
			reenter;
		endif;
		
		if ! syncdata(PUT, COM_MEN_DICS) then 
			errmsg("Erreur de transmission de la base composition.");
			reenter;
		endif;
		if ! syncdata(PUT, EXT_IND_DICS) then 
			errmsg("Erreur de transmission de la base individu.");
			reenter;
		endif;
		if ! syncdata(PUT, WEAI_DICT_DICT) then 
			errmsg("Erreur de transmission de la base weai.");
			reenter;
		endif;
		if ! syncdata(PUT, DICT_WEAI_2_DICT) then 
			errmsg("Erreur de transmission de la base culture.");
			reenter;
		endif;
		if ! syncdata(PUT, DICT_PRODUCTION_DICT) then 
			errmsg("Erreur de transmission de la base production.");
			reenter;
		endif;
		if ! syncdata(PUT, MENAGE_DICT) then 
			errmsg("Erreur de transmission de la base ménage.");
			reenter;
		endif;
	errmsg("Synchronisation réussie");}
	reenter;
endif;
if $=4 then 
	open_village();
endif;
if $=9 then 
	stop(1);
endif;
